{"ast":null,"code":"const getPostsService = async () => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};\n\nexport default getPostsService;\n\nconst getSinglePostService = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/post/$(id)`);\n  const json = await response.json();\n\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n\n  return json.data;\n};","map":{"version":3,"names":["getPostsService","response","fetch","process","env","REACT_APP_BACKEND","json","ok","Error","message","data","getSinglePostService","id"],"sources":["/home/dioni/frontend appFotos/frontendappfotos/src/services/index.js"],"sourcesContent":["const getPostsService = async () => {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND}`);\n  \n    const json = await response.json();\n  \n    if (!response.ok) {\n      throw new Error(json.message);\n    }\n  \n    return json.data;\n  };\n  \n  export default getPostsService;\n\n  const getSinglePostService = async  (id) => {\n    const response = await fetch (`${process.env.REACT_APP_BACKEND}/post/$(id)`)\n    const json = await response.json();\n\n    if (!response.ok) {\n      throw new Error(json.message);\n}\nreturn json.data \n  }"],"mappings":"AAAA,MAAMA,eAAe,GAAG,YAAY;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,EAAlC,CAA5B;EAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAT,EAAnB;;EAEA,IAAI,CAACL,QAAQ,CAACM,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUF,IAAI,CAACG,OAAf,CAAN;EACD;;EAED,OAAOH,IAAI,CAACI,IAAZ;AACD,CAVH;;AAYE,eAAeV,eAAf;;AAEA,MAAMW,oBAAoB,GAAG,MAAQC,EAAR,IAAe;EAC1C,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,aAAnC,CAA5B;EACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAT,EAAnB;;EAEA,IAAI,CAACL,QAAQ,CAACM,EAAd,EAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUF,IAAI,CAACG,OAAf,CAAN;EACL;;EACD,OAAOH,IAAI,CAACI,IAAZ;AACG,CARD"},"metadata":{},"sourceType":"module"}